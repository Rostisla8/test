{"version":3,"file":"static/js/36.532a0c42.chunk.js","mappings":"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","sources":["components/TelegramDebugPanel/TelegramDebugPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { isInTelegram, logTelegramInfo } from '../../services/telegramApi';\r\n\r\nconst TelegramDebugPanel = () => {\r\n  const [telegramInfo, setTelegramInfo] = useState(null);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Собираем информацию о Telegram WebApp\r\n    if (isInTelegram()) {\r\n      try {\r\n        const info = logTelegramInfo();\r\n        setTelegramInfo(info);\r\n      } catch (error) {\r\n        console.error('Ошибка получения информации Telegram:', error);\r\n        setErrors(prev => [...prev, `Ошибка Telegram API: ${error.message}`]);\r\n      }\r\n    }\r\n\r\n    // Отслеживаем ошибки JavaScript\r\n    const originalConsoleError = console.error;\r\n    console.error = (...args) => {\r\n      setErrors(prev => [...prev, args.join(' ')]);\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    // Устанавливаем обработчик для необработанных ошибок\r\n    const handleError = (event) => {\r\n      setErrors(prev => [...prev, `Необработанная ошибка: ${event.message} в ${event.filename}:${event.lineno}`]);\r\n    };\r\n    window.addEventListener('error', handleError);\r\n\r\n    return () => {\r\n      console.error = originalConsoleError;\r\n      window.removeEventListener('error', handleError);\r\n    };\r\n  }, []);\r\n\r\n  if (!isInTelegram()) {\r\n    return null;\r\n  }\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setErrors([]);\r\n  };\r\n\r\n  // Изменяем стили панели, чтобы она была внизу экрана и не перекрывала основной контент\r\n  const panelStyle = {\r\n    position: 'fixed',\r\n    bottom: '0',\r\n    left: '0',\r\n    right: '0',\r\n    zIndex: 9999,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\r\n    padding: '10px',\r\n    fontSize: '12px',\r\n    borderTop: '1px solid #ccc',\r\n    maxHeight: expanded ? '80vh' : '40px',\r\n    overflow: 'auto',\r\n    transition: 'all 0.3s ease',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '4px 8px',\r\n    fontSize: '10px',\r\n    marginRight: '5px',\r\n    background: '#f0f0f0',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '3px',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  return (\r\n    <div style={panelStyle}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: expanded ? '5px' : '0' }}>\r\n        <div>\r\n          <strong>Telegram Debug</strong>\r\n          {errors.length > 0 && <span style={{ color: 'red', marginLeft: '5px' }}>({errors.length} ошибок)</span>}\r\n        </div>\r\n        <div>\r\n          <button style={buttonStyle} onClick={toggleExpanded}>\r\n            {expanded ? 'Свернуть' : 'Развернуть'}\r\n          </button>\r\n          {expanded && (\r\n            <button style={buttonStyle} onClick={clearErrors}>\r\n              Очистить ошибки\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {expanded && (\r\n        <div>\r\n          <div style={{ marginTop: '10px' }}>\r\n            <strong>Информация о Telegram WebApp:</strong>\r\n            <pre style={{ fontSize: '10px', maxHeight: '200px', overflow: 'auto' }}>\r\n              {JSON.stringify(telegramInfo, null, 2)}\r\n            </pre>\r\n          </div>\r\n\r\n          {errors.length > 0 && (\r\n            <div style={{ marginTop: '10px' }}>\r\n              <strong style={{ color: 'red' }}>Ошибки ({errors.length}):</strong>\r\n              <ul style={{ maxHeight: '200px', overflow: 'auto', margin: '5px 0', padding: '0 0 0 20px' }}>\r\n                {errors.map((error, index) => (\r\n                  <li key={index} style={{ marginBottom: '5px', wordBreak: 'break-word' }}>\r\n                    {error}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ marginTop: '10px' }}>\r\n            <strong>User Agent:</strong>\r\n            <div style={{ fontSize: '10px', wordBreak: 'break-word' }}>\r\n              {navigator.userAgent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelegramDebugPanel; "],"names":["TelegramDebugPanel","telegramInfo","setTelegramInfo","useState","expanded","setExpanded","errors","setErrors","useEffect","isInTelegram","info","logTelegramInfo","error","console","prev","message","originalConsoleError","_len","arguments","length","args","Array","_key","join","handleError","event","filename","lineno","window","addEventListener","removeEventListener","panelStyle","position","bottom","left","right","zIndex","backgroundColor","padding","fontSize","borderTop","maxHeight","overflow","transition","buttonStyle","marginRight","background","border","borderRadius","cursor","_jsxs","style","children","display","justifyContent","marginBottom","_jsx","color","marginLeft","onClick","toggleExpanded","clearErrors","marginTop","JSON","stringify","margin","map","index","wordBreak","navigator","userAgent"],"sourceRoot":""}